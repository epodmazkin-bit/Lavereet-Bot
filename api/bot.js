import { Telegraf, Markup, Scenes, session } from "telegraf";
import axios from "axios";
import dotenv from "dotenv";
dotenv.config();

const BOT_TOKEN = process.env8413997708AAG9DMF6DZJidNozMfH8oHZyilTShlS3EU;
const GOOGLE_SCRIPT_URL = process.env.https//script.google.com/macros/s/AKfycbxiFlm2r7y3nOogjlQQ9kNn2BsoPj5KuW0E5bq7mdEiDzIGcTJdcEe5UNVHzgZ5Edvjjw/exec;
const ADMIN_ID = process.env1702469455;

if (!BOT_TOKEN) throw new Error("‚ùå BOT_TOKEN not provided in environment");

const bot = new Telegraf8413997708AAG9DMF6DZJidNozMfH8oHZyilTShlS3EU;

// --- –°—Ü–µ–Ω—ã ---
const askName = new Scenes.BaseScene("askName");
askName.enter((ctx) => ctx.reply("üëã –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?"));
askName.on("text", (ctx) => {
  ctx.scene.state.name = ctx.message.text;
  ctx.scene.enter("askService");
});

// üëâ —Ç–µ–ø–µ—Ä—å askService –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏, —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ—Ö–æ–¥ –≤ –Ω–æ–≤—É—é —Å—Ü–µ–Ω—É
const askService = new Scenes.BaseScene("askService");
askService.enter((ctx) =>
  ctx.reply("üé® –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —É—Å–ª—É–≥–∏:", {
    ...Markup.inlineKeyboard([
      [Markup.button.callback("üé® –ì—Ä–∞—Ñ–∏–∫–∞", "graphics")],
      [Markup.button.callback("üíª –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "webdev")],
      [Markup.button.callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", "menu")],
    ]),
  })
);

// –°—Ü–µ–Ω–∞ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
const askContact = new Scenes.BaseScene("askContact");
askContact.enter((ctx) => ctx.reply("üìû –û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç (Telegram –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞):"));
askContact.on("text", async (ctx) => {
  const { name, service } = ctx.scene.state;
  const contact = ctx.message.text;

  try {
    await axios.post("https//script.google.com/macros/s/AKfycbxiFlm2r7y3nOogjlQQ9kNn2BsoPj5KuW0E5bq7mdEiDzIGcTJdcEe5UNVHzgZ5Edvjjw/exec", { name, service, contact });
    await ctx.reply(`‚úÖ –°–ø–∞—Å–∏–±–æ, ${name}! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞.`);

    const message = `
üì¨ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!*
üë§ –ò–º—è: ${name}
üé® –£—Å–ª—É–≥–∞: ${service}
üì± –ö–æ–Ω—Ç–∞–∫—Ç: ${contact}
`;
    await bot.telegram.sendMessage(1702469455, message, { parse_mode: "Markdown" });

  } catch (err) {
    console.error(err);
    await ctx.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö.");
  }

  ctx.scene.leave();
  showMenu(ctx);
});

// --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
function showMenu(ctx) {
  return ctx.editMessageText
    ? ctx.editMessageText("‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å—Ç—É–¥–∏—é –¥–∏–∑–∞–π–Ω–∞ *Lavereet*! –ú—ã —Å–æ–∑–¥–∞—ë–º —Å—Ç–∏–ª—å–Ω—ã–π –∏ –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω ‚Äî –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤ –∏ —Å—É–µ—Ç—ã, —Ç–æ–ª—å–∫–æ —á–µ—Å—Ç–Ω—ã–π –≤–∏–∑—É–∞–ª.", {
        parse_mode: "Markdown",
        ...Markup.inlineKeyboard([
          [Markup.button.callback("üé® –£—Å–ª—É–≥–∏", "services")],
          [Markup.button.callback("üìÅ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ", "portfolio")],
          [Markup.button.callback("üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", "order")],
          [Markup.button.callback("‚ÑπÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã", "contacts")],
        ]),
      })
    : ctx.reply("‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å—Ç—É–¥–∏—é –¥–∏–∑–∞–π–Ω–∞ *Lavereet*! –ú—ã —Å–æ–∑–¥–∞—ë–º —Å—Ç–∏–ª—å–Ω—ã–π –∏ –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω ‚Äî –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤ –∏ —Å—É–µ—Ç—ã, —Ç–æ–ª—å–∫–æ —á–µ—Å—Ç–Ω—ã–π –≤–∏–∑—É–∞–ª.", {
        parse_mode: "Markdown",
        ...Markup.inlineKeyboard([
          [Markup.button.callback("üé® –£—Å–ª—É–≥–∏", "services")],
          [Markup.button.callback("üìÅ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ", "portfolio")],
          [Markup.button.callback("üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", "order")],
          [Markup.button.callback("‚ÑπÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã", "contacts")],
        ]),
      });
}

// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ü–µ–Ω ---
const stage = new Scenes.Stage([askName, askService, askContact]);
bot.use(session());
bot.use(stage.middleware());

// --- –ö–æ–º–∞–Ω–¥—ã –∏ –¥–µ–π—Å—Ç–≤–∏—è ---
bot.start((ctx) => showMenu(ctx));

/* ==============================
   1. –†–∞–∑–¥–µ–ª –£—Å–ª—É–≥–∏
   ============================== */
bot.action("services", async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.editMessageText("üé® –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —É—Å–ª—É–≥–∏:", {
    ...Markup.inlineKeyboard([
      [Markup.button.callback("üé® –ì—Ä–∞—Ñ–∏–∫–∞", "graphics")],
      [Markup.button.callback("üíª –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "webdev")],
      [Markup.button.callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", "menu")],
    ]),
  });
});

/* ==============================
   2. –ü–æ–¥—Ä–∞–∑–¥–µ–ª ‚Äî –ì—Ä–∞—Ñ–∏–∫–∞
   ============================== */
bot.action("graphics", async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.editMessageText("üñå –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *–ì—Ä–∞—Ñ–∏–∫–∞*:", {
    parse_mode: "Markdown",
    ...Markup.inlineKeyboard([
      [Markup.button.callback("–õ–æ–≥–æ—Ç–∏–ø", "service_–õ–æ–≥–æ—Ç–∏–ø")],
      [Markup.button.callback("–§–∏—Ä–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å", "service_–§–∏—Ä–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å")],
      [Markup.button.callback("–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–æ—Ü —Å–µ—Ç–µ–π", "service_–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–æ—Ü —Å–µ—Ç–µ–π")],
      [Markup.button.callback("–ò–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞", "service_–ò–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞")],
      [Markup.button.callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "services")],
    ]),
  });
});

/* ==============================
   3. –ü–æ–¥—Ä–∞–∑–¥–µ–ª ‚Äî –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
   ============================== */
bot.action("webdev", async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.editMessageText("üíª –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞*:", {
    parse_mode: "Markdown",
    ...Markup.inlineKeyboard([
      [Markup.button.callback("–õ–µ–Ω–¥–∏–Ω–≥–∏", "service_–õ–µ–Ω–¥–∏–Ω–≥–∏")],
      [Markup.button.callback("–°–∞–π—Ç—ã", "service_–°–∞–π—Ç—ã")],
      [Markup.button.callback("–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç—ã", "service_–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç—ã")],
      [Markup.button.callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "services")],
    ]),
  });
});

/* ==============================
   4. –í—ã–±–æ—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —É—Å–ª—É–≥–∏
   ============================== */
bot.action(/^service_(.+)/, async (ctx) => {
  const serviceName = ctx.match[1];
  ctx.scene.state.service = serviceName;
  await ctx.answerCbQuery();
  await ctx.editMessageText(`üìù –í—ã –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É: *${serviceName}*`, {
    parse_mode: "Markdown",
  });
  await ctx.reply("üìû –¢–µ–ø–µ—Ä—å –æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç (Telegram –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞):");
  await ctx.scene.enter("askContact");
});

/* ==============================
   –û—Å—Ç–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
   ============================== */
bot.action("portfolio", async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.editMessageText("üìÅ –ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å.", {
    ...Markup.inlineKeyboard([[Markup.button.callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "menu")]]),
  });
});

bot.action("contacts", async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.editMessageText(
    "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã —Å—Ç—É–¥–∏–∏ Lavereet:\nTelegram: @lavereet_agency\nEmail: lavereet.agency@gmail.com",
    {
      ...Markup.inlineKeyboard([[Markup.button.callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "menu")]]),
    }
  );
});

bot.action("order", async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.reply("üìù –û—Ç–ª–∏—á–Ω–æ! –ù–∞—á–Ω—ë–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏.");
  await ctx.scene.enter("askName");
});

bot.action("menu", async (ctx) => {
  await ctx.answerCbQuery();
  await showMenu(ctx);
});

// --- –î–ª—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Å—Ä–µ–¥ (Vercel –∏ —Ç.–ø.) ---
export default async function handler(req, res) {
  try {
    await bot.handleUpdate(req.body);
    res.status(200).send("ok");
  } catch (err) {
    console.error(err);
    res.status(500).send("error");
  }
}